import { AppProps } from 'next/app';
import { CacheProvider, EmotionCache } from '@emotion/react';
import { ThemeProvider, CssBaseline } from '@mui/material';

import createEmotionCache from '../utility/createEmotionCache';
import darkTheme from '../styles/theme/darkTheme';
import lightTheme from '../styles/theme/lightTheme';
import '../styles/globals.scss'
import Head from 'next/head';
import { useEffect, useState } from 'react';

const clientSideEmotionCache = createEmotionCache();

const getActiveTheme = (themeMode: 'light' | 'dark') => themeMode === 'light' ? lightTheme : darkTheme;

interface Props extends AppProps {
  emotionCache: EmotionCache
}

function MyApp({ Component, pageProps, emotionCache = clientSideEmotionCache }: Props) {
  const [activeTheme, setActiveTheme] = useState(darkTheme);
  const [selectedTheme, setSelectedTheme] = useState<'light' | 'dark'>('dark');

  const toggleTheme: React.MouseEventHandler<HTMLAnchorElement> = () => setSelectedTheme(selectedTheme === 'light' ? 'dark' : 'light');

  useEffect(() => {
    setActiveTheme(getActiveTheme(selectedTheme));
  }, [selectedTheme])
  return (
    <CacheProvider value={emotionCache}>
      <ThemeProvider theme={activeTheme}>
        <CssBaseline />
        <Head>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Component {...pageProps} toggleTheme={toggleTheme} />
      </ThemeProvider>
    </CacheProvider>
  )
}

export default MyApp
